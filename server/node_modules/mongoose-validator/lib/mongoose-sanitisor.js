var validatorjs          = require('validator');
var defaultErrorMessages = require('./default-errors');
var _                    = require('underscore');

var errorMessages        = {};

module.exports = sanitise;

function sanitise (options) {
	var name         = options.sanitisor;
  var args         = options.arguments || [];
  var message      = options.message || errorMessages[name] || defaultErrorMessages[name] || 'Error';
  var sanitisor    = (name instanceof Function) ? name : validatorjs[name];

  args = !Array.isArray(args) ? [args] : args;

  message = message.replace(/{ARGS\[(\d+)\]}/g, function (replace, argIndex) {
    var val = args[argIndex];
    return val !== undefined ? val : '';
  });

  if (sanitisor) {
    return _.extend({
      sanitisor: function(val, next) {
        var sanitisorArgs = [val].concat(args);

        return next(sanitisor.apply(null, sanitisorArgs));
      },
      message: message
    }, extend);
  }

  throw new Error('Sanitiser `' +  name + '` does not exist on validator.js');

};